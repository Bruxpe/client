{"ast":null,"code":"import { GET_ALL_POKEMONS, GET_DETAIL_POKEMONS, CLEAN_POKEMONS_DETAILS, GET_TYPES, GET_DB_POKEMONS } from \"./actions-types\";\nimport axios from \"axios\";\nexport const getAllPokemos = () => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3001/pokemons\").then(result => result.json()).then(data => {\n      return dispatch({\n        type: GET_ALL_POKEMONS,\n        payload: data\n      }); // lo despachas --> con un type\n    });\n  };\n};\n\nexport const getAllTypes = () => {\n  return function (dispatch) {\n    fetch(\"http://localhost:3001/pokemons/tipos\").then(result => result.json()).then(data => {\n      const allTypes = [\"All\", ...data];\n      return dispatch({\n        type: GET_TYPES,\n        payload: allTypes\n      }); // lo despachas --> con un type\n    });\n  };\n};\n\nexport const postPokeArray = async postArray => {\n  const data = {\n    name: postArray.name,\n    hp: postArray.hp,\n    attack: postArray.attack,\n    defense: postArray.defense,\n    speed: postArray.speed,\n    types: postArray.types\n  };\n  try {\n    const response = await axios.post(\"http://localhost:3001/pokemons\", data);\n    return response;\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"names":["GET_ALL_POKEMONS","GET_DETAIL_POKEMONS","CLEAN_POKEMONS_DETAILS","GET_TYPES","GET_DB_POKEMONS","axios","getAllPokemos","dispatch","fetch","then","result","json","data","type","payload","getAllTypes","allTypes","postPokeArray","postArray","name","hp","attack","defense","speed","types","response","post","error"],"sources":["C:/Users/User/Desktop/Nueva carpeta (4)/PI-Pokemon-main/client/src/Redux/actions.js"],"sourcesContent":["import {GET_ALL_POKEMONS,GET_DETAIL_POKEMONS,CLEAN_POKEMONS_DETAILS,GET_TYPES,GET_DB_POKEMONS} from \"./actions-types\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const getAllPokemos = () => {\r\n    return function(dispatch) {\r\n        fetch(\"http://localhost:3001/pokemons\")\r\n        .then(result => result.json())\r\n        .then(data => {\r\n            \r\n            return dispatch({type: GET_ALL_POKEMONS, payload: data}); // lo despachas --> con un type\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAllTypes =()=>{\r\n    return function(dispatch) {\r\n        fetch(\"http://localhost:3001/pokemons/tipos\")\r\n        .then(result => result.json())\r\n        .then(data => {\r\n            const allTypes = [\"All\", ...data]; \r\n            return dispatch({type: GET_TYPES, payload: allTypes}); // lo despachas --> con un type\r\n        })\r\n    }\r\n\r\n}\r\n\r\n    export const postPokeArray = async (postArray)=>{\r\n        const data = {\r\n            name: postArray.name,\r\n            hp: postArray.hp,\r\n            attack: postArray.attack,\r\n            defense: postArray.defense,\r\n            speed: postArray.speed,\r\n            types: postArray.types\r\n          };\r\n        try {\r\n            const response = await axios.post(\"http://localhost:3001/pokemons\",data);\r\n            return (response)\r\n        } catch (error) {\r\n            return (error);\r\n        }\r\n\r\n\r\n    }       \r\n\r\n\r\n"],"mappings":"AAAA,SAAQA,gBAAgB,EAACC,mBAAmB,EAACC,sBAAsB,EAACC,SAAS,EAACC,eAAe,QAAO,iBAAiB;AACrH,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO,UAASC,QAAQ,EAAE;IACtBC,KAAK,CAAC,gCAAgC,CAAC,CACtCC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,EAAE,CAAC,CAC7BF,IAAI,CAACG,IAAI,IAAI;MAEV,OAAOL,QAAQ,CAAC;QAACM,IAAI,EAAEb,gBAAgB;QAAEc,OAAO,EAAEF;MAAI,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC;EACN,CAAC;AACL,CAAC;;AAED,OAAO,MAAMG,WAAW,GAAEA,CAAA,KAAI;EAC1B,OAAO,UAASR,QAAQ,EAAE;IACtBC,KAAK,CAAC,sCAAsC,CAAC,CAC5CC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,EAAE,CAAC,CAC7BF,IAAI,CAACG,IAAI,IAAI;MACV,MAAMI,QAAQ,GAAG,CAAC,KAAK,EAAE,GAAGJ,IAAI,CAAC;MACjC,OAAOL,QAAQ,CAAC;QAACM,IAAI,EAAEV,SAAS;QAAEW,OAAO,EAAEE;MAAQ,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC;EACN,CAAC;AAEL,CAAC;;AAEG,OAAO,MAAMC,aAAa,GAAG,MAAOC,SAAS,IAAG;EAC5C,MAAMN,IAAI,GAAG;IACTO,IAAI,EAAED,SAAS,CAACC,IAAI;IACpBC,EAAE,EAAEF,SAAS,CAACE,EAAE;IAChBC,MAAM,EAAEH,SAAS,CAACG,MAAM;IACxBC,OAAO,EAAEJ,SAAS,CAACI,OAAO;IAC1BC,KAAK,EAAEL,SAAS,CAACK,KAAK;IACtBC,KAAK,EAAEN,SAAS,CAACM;EACnB,CAAC;EACH,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,gCAAgC,EAACd,IAAI,CAAC;IACxE,OAAQa,QAAQ;EACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAQA,KAAK;EACjB;AAGJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}