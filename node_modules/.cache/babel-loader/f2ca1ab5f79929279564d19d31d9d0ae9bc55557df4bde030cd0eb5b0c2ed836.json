{"ast":null,"code":"// import { useLocation, useParams } from 'react-router-dom';\n// import TitleBar from '../TitleBar/TitleBar';\n// import Footer from '../Footer/Footer';\n// import styles from './CardDetail.module.css'\n// import { useSelector } from \"react-redux\"; \n\n// const CardDetail = ()=>{\n\n//     const name = useParams();\n//     const location = useLocation();\n//     const pokemones = useSelector(state => state.pokemones);\n//     const pokemon = pokemones.find(pokemon => pokemon.name === name.id);\n\n//     if (typeof pokemon.id === 'string') {\n//         // convertir la propiedad 'types' a un arreglo de strings\n//         // pokemon.types = [];\n//         pokemon.types = pokemon.Types.map(type => type.name);\n//     }\n//     console.log(\"pokemon.types\");\n//     console.log(pokemon.types);\n\n//     // {if(name !== Number){\n//     //     pokemon.types = \n//     // } ;}\n//     return(\n//         <div className={styles.cont}>\n//             <TitleBar type={\"/pokedetail\"} text={`Pokenon--> ${pokemon.name}`} />\n//             <div className={styles.card}>\n//                 <div className={styles.image}>\n//                     <img src={pokemon.img} alt=\"\" />\n//                 </div>\n//                 <div className={styles.text}>\n//                     {/* <div>Name: {pokemon.name}</div> */}\n//                     <div>HP: {pokemon.hp}</div>\n//                     <div>Attack: {pokemon.attack}</div>\n//                     <div>Defense: {pokemon.defense}</div>\n//                     <div>Speed: {pokemon.speed}</div>\n//                     <div>Speed: {pokemon.types.join(\"---\")}</div>\n//                 </div>\n//             </div>\n//             <Footer/>\n//         </div>\n//     )\n// }\n\n// export default CardDetail;","map":{"version":3,"names":[],"sources":["C:/Users/User/Desktop/Nueva carpeta (4)/PI-Pokemon-main/client/src/Components/CardDetail/CardDetail.jsx"],"sourcesContent":["// import { useLocation, useParams } from 'react-router-dom';\r\n// import TitleBar from '../TitleBar/TitleBar';\r\n// import Footer from '../Footer/Footer';\r\n// import styles from './CardDetail.module.css'\r\n// import { useSelector } from \"react-redux\"; \r\n\r\n// const CardDetail = ()=>{\r\n\r\n//     const name = useParams();\r\n//     const location = useLocation();\r\n//     const pokemones = useSelector(state => state.pokemones);\r\n//     const pokemon = pokemones.find(pokemon => pokemon.name === name.id);\r\n\r\n//     if (typeof pokemon.id === 'string') {\r\n//         // convertir la propiedad 'types' a un arreglo de strings\r\n//         // pokemon.types = [];\r\n//         pokemon.types = pokemon.Types.map(type => type.name);\r\n//     }\r\n//     console.log(\"pokemon.types\");\r\n//     console.log(pokemon.types);\r\n\r\n//     // {if(name !== Number){\r\n//     //     pokemon.types = \r\n//     // } ;}\r\n//     return(\r\n//         <div className={styles.cont}>\r\n//             <TitleBar type={\"/pokedetail\"} text={`Pokenon--> ${pokemon.name}`} />\r\n//             <div className={styles.card}>\r\n//                 <div className={styles.image}>\r\n//                     <img src={pokemon.img} alt=\"\" />\r\n//                 </div>\r\n//                 <div className={styles.text}>\r\n//                     {/* <div>Name: {pokemon.name}</div> */}\r\n//                     <div>HP: {pokemon.hp}</div>\r\n//                     <div>Attack: {pokemon.attack}</div>\r\n//                     <div>Defense: {pokemon.defense}</div>\r\n//                     <div>Speed: {pokemon.speed}</div>\r\n//                     <div>Speed: {pokemon.types.join(\"---\")}</div>\r\n//                 </div>\r\n//             </div>\r\n//             <Footer/>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default CardDetail;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}